services:
  vlar_app:
    build:
      context: ./src
      dockerfile: Dockerfile
    container_name: vlar_app
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    environment:
      - BROADCAST_DRIVER=database
      - CACHE_DRIVER=database
      - SESSION_DRIVER=database
      - QUEUE_CONNECTION=database
    depends_on:
      - db_postgres
    networks:
      - app-network

  db_postgres:
    image: postgres:15
    container_name: db_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./db_data:/var/lib/postgresql/data
    networks:
      - app-network
  
  vlar_fe:
    build:
      context: ./fe
      dockerfile: Dockerfile
    container_name: vlar_fe
    working_dir: /app
    volumes:
      - ./fe:/app
      - /app/node_modules
    ports:
      - "5173:80"
    environment:
      - NODE_ENV=development
    depends_on:
      - vlar_app
    networks:
      - app-network

  webserver:
    image: nginx:latest
    container_name: nginx_server
    volumes:
      - ./src:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8000:80"
    depends_on:
      - vlar_app
    networks:
      - app-network

volumes:
  db_data:
    driver: local

networks:
  app-network:
    driver: bridge
